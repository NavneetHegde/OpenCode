trigger:
  branches:
    include:
      - release/*

pool:
  vmImage: 'windows-2019'

variables:
  patch: $[counter(variables['Build.SourceBranchName'], 0)]
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

# Set the value of $(Build.BuildNumber)
name: 2.0.$(patch)

steps:

# Install NuGet tool
- task: NuGetToolInstaller@1
  displayName: 'Install NuGet'
  inputs:
    versionSpec: '4.9.1'
    checkLatest: true

- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '8.x

# Restore NuGet packages
- task: NuGetCommand@2
  displayName: 'Restore NuGet packages'
  inputs:
    command: 'restore'
    restoreSolution: '$(solution)'

# Build the solution
- task: VSBuild@1
  displayName: 'Build the solution'
  inputs:
    solution: '$(solution)'
    clean: true
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# Run tests
- task: VSTest@2
  displayName: 'Run tests'
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

# Collect Code coverage
- task: DotNetCoreCLI@2
  displayName: 'Collect Code coverage'
  inputs:
    command: test
    projects: '**/*Tests/*.csproj'
    arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish Code Coverage Results'
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.cobertura.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/CodeCoverage'

# Pack the NuGet package
- task: NuGetCommand@2
  displayName: 'Pack NuGet package'
  inputs:
    command: pack
    packagesToPack: '**/*.csproj;!**/*Tests/*.csproj'
    buildProperties: 'Configuration=$(buildConfiguration)'
    versioningScheme: byPrereleaseNumber
    majorVersion: '2'
    minorVersion: '0'
    patchVersion: '$(patch)'

# Push the NuGet package
- task: NuGetCommand@2
  displayName: 'Push NuGet package'
  inputs:
    command: push
    packagesToPush: '**/*.nupkg'
    nuGetFeedType: external
    publishFeedCredentials: 'OpenCode.Nuget'
    allowPackageConflicts: true